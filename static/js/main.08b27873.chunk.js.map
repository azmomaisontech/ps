{"version":3,"sources":["config/types.ts","assets/test-landscape.png","config/vars.ts","config/consts.ts","components/ps/styles.ts","components/toolbar/styles.ts","config/images.ts","utils.ts","components/ps/context.tsx","components/toolbar/toolbar.tsx","components/canvas/styles.ts","components/canvas/canvas.tsx","components/sidebar/styles.ts","components/sidebar/sidebar.tsx","components/ps/ps.tsx","index.tsx"],"names":["Tool","ToolHotKey","white","black","black300","black200","black100","DEFAULTS","position","x","y","startX","startY","lastX","lastY","filters","blur","saturation","hue","sepia","pointGroups","pointGroupIndex","color","vars","brushSize","rotation","tool","move","opacity","scale","pressedKeys","PsWrapper","styled","div","PsInner","MAX_CANVAS_WIDTH","PsFlex","ToolbarWrapper","ToolButton","button","props","inactive","css","active","encode","svg","encodeURIComponent","TRANSPARENT_BACKGROUND","MOVE_ICON","ZOOM_ICON","BRUSH_ICON","clamp","value","min","max","Math","getPosition","event","element","getBoundingClientRect","left","top","width","height","abs","touches","pageX","pageY","getPoints","pointer","size","settings","minD","p","pointGroup","undefined","points","a","b","lastPoint","length","sqrt","pow","getCursor","brush","zoom","direction","includes","zoomOut","PsContext","React","createContext","PsContextProvider","children","src","useState","blob","setBlob","setPointGroups","setPointGroupIndex","down","setPointer","ratio","setSize","setRotation","setTool","setPosition","setFilters","setColor","setBrushSize","setScale","setOpacity","setPressedKeys","transform","useMemo","cx","cy","s","join","lineCap","useRef","reset","useCallback","download","current","canvas","document","createElement","ctx","getContext","img","Image","onload","drawImage","toBlob","href","URL","createObjectURL","click","setAttribute","toString","base64","outerHTML","removeAttribute","useEffect","toDataURL","svgElement","addEventListener","onPointerDown","passive","window","onPointerMove","onPointerUp","removeEventListener","point","preventDefault","getKey","key","toLowerCase","onKeyDown","onKeyUp","index","indexOf","splice","context","Provider","Toolbar","foreground","useContext","colorInput","toggleTool","currentTool","onClick","title","alt","ref","type","onChange","e","target","CanvasWrapper","Canvas","style","cursor","viewBox","xmlns","xmlnsXlink","maxWidth","maxHeight","id","stdDeviation","values","xlinkHref","filter","map","stroke","fill","d","strokeWidth","strokeLinecap","strokeLinejoin","r","strokeMiterlimit","SidebarWrapper","Sidebar","checked","step","parseFloat","parseInt","Ps","ReactDOM","render","StrictMode","testLandscape","getElementById"],"mappings":"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","file":"static/js/main.08b27873.chunk.js","sourcesContent":["import React from \"react\";\n\nexport type Props = {\n  src: string;\n};\n\nexport type Point = {\n  x: number;\n  y: number;\n};\n\nexport type PointGroup = {\n  color: string;\n  size: number;\n  points: Point[];\n};\n\nexport type Pointer = {\n  down: boolean;\n  x: number;\n  y: number;\n};\n\nexport type Settings = {\n  lineCap: \"round\";\n  p: number;\n};\n\nexport type Position = {\n  x: number;\n  y: number;\n  startX: number;\n  startY: number;\n  lastX: number;\n  lastY: number;\n};\n\nexport type Filters = {\n  blur: number;\n  saturation: number;\n  hue: number;\n  sepia: boolean;\n};\n\nexport type Size = {\n  width: number;\n  height: number;\n  ratio: number;\n};\n\nexport type GetPointsProps = {\n  pointGroups: PointGroup[];\n  pointGroupIndex: number;\n  pointer: Pointer;\n  color: string;\n  brushSize?: number;\n  size: {\n    width: number;\n    height: number;\n  };\n  settings: Settings;\n};\n\nexport enum Tool {\n  move,\n  brush,\n  zoom,\n}\n\nexport enum ToolHotKey {\n  move = \"v\",\n  brush = \"b\",\n  zoom = \"z\",\n  zoomOut = \"alt\",\n}\n\nexport type PressedKeys = string[];\n\nexport type PsContextType = {\n  blob: string;\n  setBlob: React.Dispatch<React.SetStateAction<string>>;\n  pointGroups: PointGroup[];\n  setPointGroups: React.Dispatch<React.SetStateAction<PointGroup[]>>;\n  pointGroupIndex: number;\n  setPointGroupIndex: React.Dispatch<React.SetStateAction<number>>;\n  pointer: Pointer;\n  setPointer: React.Dispatch<React.SetStateAction<Pointer>>;\n  size: Size;\n  setSize: React.Dispatch<React.SetStateAction<Size>>;\n  rotation: number;\n  setRotation: React.Dispatch<React.SetStateAction<number>>;\n  tool: Tool;\n  setTool: React.Dispatch<React.SetStateAction<Tool>>;\n  position: Position;\n  setPosition: React.Dispatch<React.SetStateAction<Position>>;\n  filters: Filters;\n  setFilters: React.Dispatch<React.SetStateAction<Filters>>;\n  color: string;\n  setColor: React.Dispatch<React.SetStateAction<string>>;\n  brushSize: number;\n  setBrushSize: React.Dispatch<React.SetStateAction<number>>;\n  scale: number;\n  setScale: React.Dispatch<React.SetStateAction<number>>;\n  opacity: number;\n  setOpacity: React.Dispatch<React.SetStateAction<number>>;\n  pressedKeys: PressedKeys;\n  setPressedKeys: React.Dispatch<React.SetStateAction<PressedKeys>>;\n  transform: string;\n  settings: Settings;\n  svg: React.MutableRefObject<SVGSVGElement | null>;\n  reset: React.MouseEventHandler;\n  download: React.MouseEventHandler;\n};\n","export default __webpack_public_path__ + \"static/media/test-landscape.3381b063.png\";","// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  colors: {\n    white: \"#ffffff\",\n    black: \"#000000\",\n    black300: \"#333\",\n    black200: \"#222\",\n    black100: \"#1c1c1c\",\n  },\n};\n","import vars from \"./vars\";\nimport { Tool } from \"./types\";\n\nexport const DEFAULTS = {\n  position: {\n    x: 0,\n    y: 0,\n    startX: 0,\n    startY: 0,\n    lastX: 0,\n    lastY: 0,\n  },\n  filters: {\n    blur: 0,\n    saturation: 1,\n    hue: 0,\n    sepia: false,\n  },\n  pointGroups: [],\n  pointGroupIndex: -1,\n  color: vars.colors.black,\n  brushSize: 10,\n  rotation: 0,\n  tool: Tool.move,\n  opacity: 1,\n  scale: 1,\n  pressedKeys: [],\n};\n\nexport const MOBILE_WIDTH = 700;\n\nexport const MAX_CANVAS_WIDTH = 800;\n\nexport const MAX_SIDEBAR_WIDTH = 200;\n\nexport const ZOOM_DELTA = 0.01;\n","import styled from \"styled-components\";\nimport vars from \"../../config/vars\";\nimport {\n  MAX_CANVAS_WIDTH,\n  MAX_SIDEBAR_WIDTH,\n  MOBILE_WIDTH,\n} from \"../../config/consts\";\n\nexport const PsWrapper = styled.div`\n  width: 100%;\n  min-height: 100%;\n  background-color: ${vars.colors.black100};\n  color: ${vars.colors.white};\n  user-select: none;\n  padding: 1em;\n`;\n\nexport const PsInner = styled.div`\n  width: 100%;\n  max-width: ${MAX_CANVAS_WIDTH + MAX_SIDEBAR_WIDTH}px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const PsFlex = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n\n  @media (max-width: ${MOBILE_WIDTH}px) {\n    flex-direction: column;\n    justify-content: flex-start;\n  }\n`;\n","import styled, { css } from \"styled-components\";\nimport vars from \"../../config/vars\";\n\nconst TOOL_BUTTON_PADDING = \"0.5em\";\n\nexport const ToolbarWrapper = styled.div`\n  width: 100%;\n  background-color: ${vars.colors.black300};\n  padding: 0.25em;\n  display: flex;\n`;\n\ntype ToolButtonProps = {\n  active?: boolean;\n  inactive?: boolean;\n};\n\nexport const ToolButton = styled.button<ToolButtonProps>`\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n  outline: none;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: ${TOOL_BUTTON_PADDING};\n  margin-right: 0.25em;\n\n  &:last-child {\n    margin-right: 0;\n  }\n\n  &:hover {\n    background-color: ${vars.colors.black100};\n\n    ${(props) => {\n      if (!props.inactive) return;\n      return css`\n        background-color: transparent;\n      `;\n    }}\n  }\n\n  ${(props) => {\n    if (!props.active) return;\n    return css`\n      background-color: ${vars.colors.black100};\n    `;\n  }}\n\n  img {\n    width: 1.5em;\n    align-self: center;\n    flex-shrink: 0;\n  }\n\n  input {\n    position: absolute;\n    cursor: pointer;\n    opacity: 0;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    z-index: 1;\n  }\n`;\n","import vars from \"./vars\";\n\nfunction encode(svg: string): string {\n  return `data:image/svg+xml;utf8,${encodeURIComponent(svg)}`;\n}\n\nexport const TRANSPARENT_BACKGROUND = encode(\n  `<svg width=\"20\" height=\"20\" viewBox=\"0 0 40 40\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m0 0h20v20h-20z\" fill=\"#d7d7d7\"/><path d=\"m20 20h20v20h-20z\" fill=\"#d7d7d7\"/><g fill=\"#fff\"><path d=\"m20 0h20v20h-20z\"/><path d=\"m0 20h20v20h-20z\"/></g></svg>`\n);\n\nexport const MOVE_ICON = encode(\n  `<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m2674 2900-23.08 19.23v-15.38h-23.07v23.07h15.38l-19.23 23.08-19.23-23.08h15.38v-23.07h-23.07v15.38l-23.08-19.23 23.08-19.23v15.38h23.07v-23.07h-15.38l19.23-23.08 19.23 23.08h-15.38v23.07h23.07v-15.38z\" fill=\"${vars.colors.white}\" fill-rule=\"evenodd\" transform=\"translate(-2574 -2850)\"/></svg>`\n);\n\nexport const ZOOM_ICON = encode(\n  `<svg width=\"100\" height=\"98.46\" viewBox=\"0 0 100 98.46\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m2210.36 2012.7-8.65 8.64-32.57-32.57a36.468 36.468 0 1 1 8.41-8.88zm-63.33-83.71a30.56 30.56 0 1 0 30.57 30.56 30.564 30.564 0 0 0 -30.57-30.56zm0 13.75a16.653 16.653 0 0 0 -9.16 2.75v-6.94a22.909 22.909 0 0 1 32.09 21h-6.12a16.809 16.809 0 0 0 -16.81-16.81z\" fill=\"${vars.colors.white}\" fill-rule=\"evenodd\" transform=\"translate(-2110.34 -1922.88)\"/></svg>`\n);\n\nexport const BRUSH_ICON = encode(\n  `<svg width=\"99.93\" height=\"102.85\" viewBox=\"0 0 99.93 102.85\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m2628.24 1289.83s-2.56-8.1-13.65-10.23c10.6-12.15 50.94-60.57 58-54.58 8.92 7.55-44.35 64.81-44.35 64.81zm-3.41 10.24s1.1 27.29-51.18 27.29c0 0 10.24-7.01 10.24-13.65 0-6.82 6.65-30.7 23.88-30.7 17.06 0 17.06 17.06 17.06 17.06z\" fill=\"${vars.colors.white}\" fill-rule=\"evenodd\" transform=\"translate(-2573.66 -1224.53)\"/></svg>`\n);\n\nexport const COLOR_ICON = (foreground: string) =>\n  encode(\n    `<svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m2674 2022h-70v-30h-30v-70h70v30h30zm-10-60h-20v30h-30v20h50z\" fill=\"${foreground}\" fill-rule=\"evenodd\" transform=\"translate(-2574 -1922)\"/></svg>`\n  );\n","import {\n  GetPointsProps,\n  Point,\n  PointGroup,\n  PressedKeys,\n  Tool,\n  ToolHotKey,\n} from \"./config/types\";\n\nexport function clamp(value: number, min: number, max: number): number {\n  return Math.min(Math.max(value, min), max);\n}\n\nexport function dist(a: Point, b: Point): number {\n  return Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\n}\n\nexport function getPosition(\n  event: TouchEvent | PointerEvent,\n  element: SVGSVGElement | null\n): Point {\n  if (element === null) return { x: 0, y: 0 };\n  let { left, top, width, height } = element.getBoundingClientRect();\n  left = Math.abs(left);\n  top = Math.abs(top);\n  let x;\n  let y;\n  if (\"touches\" in event) {\n    x = event.touches[0]?.pageX ?? 0;\n    y = event.touches[0]?.pageY ?? 0;\n  } else {\n    x = event.pageX;\n    y = event.pageY;\n  }\n  return {\n    x: clamp(x - left, 0, width) / width,\n    y: clamp(y - top, 0, height) / height,\n  };\n}\n\nexport function getPoints({\n  pointGroups,\n  pointGroupIndex,\n  pointer,\n  color,\n  brushSize = 10,\n  size,\n  settings,\n}: GetPointsProps): PointGroup[] {\n  const minD = brushSize / Math.min(size.width, size.height) / settings.p;\n  const pointGroup = pointGroups[pointGroupIndex];\n  if (pointGroup === undefined) {\n    pointGroups[pointGroupIndex] = {\n      color,\n      size: brushSize,\n      points: [{ x: pointer.x, y: pointer.y }],\n    };\n    return [...pointGroups];\n  }\n  const lastPoint = pointGroup.points[pointGroup.points.length - 1];\n  if (lastPoint !== undefined) {\n    const d = dist(lastPoint, pointer);\n    if (d < minD) return pointGroups;\n  }\n  pointGroups[pointGroupIndex].color = color;\n  pointGroups[pointGroupIndex].points = [\n    ...pointGroups[pointGroupIndex].points,\n    { x: pointer.x, y: pointer.y },\n  ];\n  return [...pointGroups];\n}\n\nexport function getCursor(tool: Tool, pressedKeys: PressedKeys = []): string {\n  switch (tool) {\n    case Tool.move:\n      return \"move\";\n    case Tool.brush:\n      return \"none\";\n    case Tool.zoom:\n      const direction = pressedKeys.includes(ToolHotKey.zoomOut) ? \"out\" : \"in\";\n      return `zoom-${direction}`;\n    default:\n      return \"default\";\n  }\n}\n","import React from \"react\";\nimport {\n  Filters,\n  Pointer,\n  PointGroup,\n  Position,\n  PressedKeys,\n  PsContextType,\n  Settings,\n  Size,\n  Tool,\n  ToolHotKey,\n} from \"../../config/types\";\nimport { DEFAULTS, ZOOM_DELTA } from \"../../config/consts\";\nimport { getPoints, getPosition } from \"../../utils\";\n\ntype Props = {\n  children: any;\n  src: string;\n};\n\nexport const PsContext = React.createContext({});\n\nexport default function PsContextProvider({ children, src }: Props) {\n  const [blob, setBlob] = React.useState<string>(\"\");\n  const [pointGroups, setPointGroups] = React.useState<PointGroup[]>(\n    DEFAULTS.pointGroups\n  );\n  const [pointGroupIndex, setPointGroupIndex] = React.useState<number>(\n    DEFAULTS.pointGroupIndex\n  );\n  const [pointer, setPointer] = React.useState<Pointer>({\n    down: false,\n    x: 0,\n    y: 0,\n  });\n  const [size, setSize] = React.useState<Size>({\n    width: 0,\n    height: 0,\n    ratio: 1,\n  });\n  const [rotation, setRotation] = React.useState<number>(DEFAULTS.rotation);\n  const [tool, setTool] = React.useState<Tool>(Tool.move);\n  const [position, setPosition] = React.useState<Position>(DEFAULTS.position);\n  const [filters, setFilters] = React.useState<Filters>(DEFAULTS.filters);\n  const [color, setColor] = React.useState<string>(DEFAULTS.color);\n  const [brushSize, setBrushSize] = React.useState<number>(DEFAULTS.brushSize);\n  const [scale, setScale] = React.useState<number>(DEFAULTS.scale);\n  const [opacity, setOpacity] = React.useState<number>(DEFAULTS.opacity);\n  const [pressedKeys, setPressedKeys] = React.useState<PressedKeys>(\n    DEFAULTS.pressedKeys\n  );\n  const transform = React.useMemo((): string => {\n    const cx = size.width / 2;\n    const cy = size.height / 2;\n    const s = scale;\n    return [\n      `translate(${position.x * size.width} ${position.y * size.height})`,\n      `rotate(${rotation}, ${size.width / 2}, ${size.height / 2})`,\n      `matrix(${s}, 0, 0, ${s}, ${cx - s * cx}, ${cy - s * cy})`,\n    ].join(\" \");\n  }, [size, scale, position, rotation]);\n  const settings = React.useMemo<Settings>(() => {\n    return {\n      lineCap: \"round\",\n      p: 3 * size.ratio, // precision\n    };\n  }, [size]);\n  const svg = React.useRef<SVGSVGElement | null>(null);\n\n  const reset = React.useCallback(() => {\n    setPosition(DEFAULTS.position);\n    setFilters(DEFAULTS.filters);\n    setPointGroups(DEFAULTS.pointGroups);\n    setPointGroupIndex(DEFAULTS.pointGroupIndex);\n    setColor(DEFAULTS.color);\n    setBrushSize(DEFAULTS.brushSize);\n    setRotation(DEFAULTS.rotation);\n    setTool(DEFAULTS.tool);\n    setOpacity(DEFAULTS.opacity);\n    setScale(DEFAULTS.scale);\n    setPressedKeys(DEFAULTS.pressedKeys);\n  }, []);\n\n  const download = React.useCallback(() => {\n    const svgElement: SVGSVGElement | null = svg.current;\n    if (svgElement === null) return;\n    const canvas = document.createElement(\"canvas\");\n    const ctx: CanvasRenderingContext2D | null = canvas.getContext(\"2d\");\n    if (ctx === null) return;\n    const img = new Image();\n    img.onload = () => {\n      canvas.width = img.width;\n      canvas.height = img.height;\n      ctx.drawImage(img, 0, 0, img.width, img.height);\n      canvas.toBlob((blob) => {\n        const a = document.createElement(\"a\");\n        a.href = URL.createObjectURL(blob);\n        a.download = \"image.png\";\n        a.click();\n      }, \"image/png\");\n    };\n    if (svg.current === null) return;\n    svg.current.setAttribute(\"width\", size.width.toString());\n    svg.current.setAttribute(\"height\", size.height.toString());\n    const base64 = encodeURIComponent(svg.current.outerHTML);\n    img.src = `data:image/svg+xml;utf8,${base64}`;\n    svg.current.removeAttribute(\"width\");\n    svg.current.removeAttribute(\"height\");\n  }, [size, svg]);\n\n  React.useEffect(() => {\n    const img = new Image();\n    img.onload = () => {\n      const canvas = document.createElement(\"canvas\");\n      const ctx: CanvasRenderingContext2D | null = canvas.getContext(\"2d\");\n      // @todo resize image to improve performance on large images\n      if (ctx !== null) {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.drawImage(img, 0, 0);\n        setBlob(canvas.toDataURL(\"image/png\"));\n      }\n      setSize({\n        width: img.width,\n        height: img.height,\n        ratio: img.width / img.height,\n      });\n    };\n    img.src = src;\n  }, [src, setSize, setBlob]);\n\n  React.useEffect(() => {\n    const svgElement: SVGSVGElement | null = svg.current;\n\n    if (svgElement === null) return;\n\n    function onPointerDown(event: TouchEvent | PointerEvent) {\n      const point = getPosition(event, svgElement);\n      if (tool === Tool.brush) {\n        setPointGroupIndex((pointGroupIndex) => pointGroupIndex + 1);\n        setPointGroups((pointGroups) => [\n          ...pointGroups,\n          { color, size: brushSize, points: [point, point] },\n        ]);\n      }\n      setPosition((position) => ({\n        ...position,\n        startX: point.x,\n        startY: point.y,\n      }));\n      setPointer((pointer) => ({ ...pointer, ...point, down: true }));\n    }\n\n    function onPointerMove(event: TouchEvent | PointerEvent) {\n      event.preventDefault();\n      const point = getPosition(event, svgElement);\n      setPointer((pointer) => ({ ...pointer, ...point }));\n    }\n\n    function onPointerUp() {\n      setPosition((position) => ({\n        ...position,\n        lastX: position.x,\n        lastY: position.y,\n      }));\n      setPointer((pointer) => ({ ...pointer, down: false }));\n    }\n\n    svgElement.addEventListener(\"pointerdown\", onPointerDown, {\n      passive: true,\n    });\n    window.addEventListener(\"pointermove\", onPointerMove, { passive: false });\n    window.addEventListener(\"pointerup\", onPointerUp, { passive: false });\n    svgElement.addEventListener(\"touchstart\", onPointerDown, {\n      passive: false,\n    });\n    window.addEventListener(\"touchmove\", onPointerMove, { passive: false });\n    window.addEventListener(\"touchend\", onPointerUp, { passive: false });\n    return () => {\n      svgElement.removeEventListener(\"pointerdown\", onPointerDown);\n      window.removeEventListener(\"pointermove\", onPointerMove);\n      window.removeEventListener(\"pointerup\", onPointerUp);\n      svgElement.removeEventListener(\"touchstart\", onPointerDown);\n      window.removeEventListener(\"touchmove\", onPointerMove);\n      window.removeEventListener(\"touchend\", onPointerUp);\n    };\n  }, [\n    svg,\n    tool,\n    size,\n    color,\n    brushSize,\n    setPointGroupIndex,\n    setPointGroups,\n    setPointer,\n    setPosition,\n  ]);\n\n  React.useEffect(() => {\n    if (!pointer.down || tool !== Tool.brush) return;\n    setPointGroups((pointGroups) =>\n      getPoints({\n        pointGroups,\n        pointGroupIndex,\n        pointer,\n        color,\n        size,\n        settings,\n      })\n    );\n  }, [tool, pointer, pointGroupIndex, color, size, settings, setPointGroups]);\n\n  React.useEffect(() => {\n    if (!pointer.down || tool !== Tool.move) return;\n    setPosition((position) => ({\n      ...position,\n      x: pointer.x - position.startX + position.lastX,\n      y: pointer.y - position.startY + position.lastY,\n    }));\n  }, [pointer, tool, setPosition]);\n\n  React.useEffect(() => {\n    if (pressedKeys.includes(ToolHotKey.move)) {\n      setTool(Tool.move);\n    }\n    if (pressedKeys.includes(ToolHotKey.brush)) {\n      setTool(Tool.brush);\n    }\n    if (pressedKeys.includes(ToolHotKey.zoom)) {\n      setTool(Tool.zoom);\n    }\n  }, [pressedKeys]);\n\n  React.useEffect(() => {\n    if (pointer.down && tool === Tool.zoom) {\n      const direction = pressedKeys.includes(ToolHotKey.zoomOut) ? -1 : 1;\n      setScale((scale) => scale + ZOOM_DELTA * direction);\n    }\n  }, [pressedKeys, tool, pointer.down]);\n\n  React.useEffect(() => {\n    function getKey(event: KeyboardEvent): string {\n      return event.key.toLowerCase();\n    }\n\n    function onKeyDown(event: KeyboardEvent) {\n      const key = getKey(event);\n      setPressedKeys((pressedKeys) => {\n        if (pressedKeys.includes(key)) return pressedKeys;\n        return [...pressedKeys, key];\n      });\n    }\n\n    function onKeyUp(event: KeyboardEvent) {\n      const key = getKey(event);\n      setPressedKeys((pressedKeys) => {\n        const index = pressedKeys.indexOf(key);\n        if (index === -1) return pressedKeys;\n        pressedKeys.splice(index, 1);\n        return [...pressedKeys];\n      });\n    }\n\n    window.addEventListener(\"keydown\", onKeyDown);\n    window.addEventListener(\"keyup\", onKeyUp);\n    return () => {\n      window.removeEventListener(\"keydown\", onKeyDown);\n      window.removeEventListener(\"keyup\", onKeyUp);\n    };\n  }, []);\n\n  const context: PsContextType = {\n    blob,\n    setBlob,\n    pointGroups,\n    setPointGroups,\n    pointGroupIndex,\n    setPointGroupIndex,\n    pointer,\n    setPointer,\n    size,\n    setSize,\n    rotation,\n    setRotation,\n    tool,\n    setTool,\n    position,\n    setPosition,\n    filters,\n    setFilters,\n    color,\n    setColor,\n    brushSize,\n    setBrushSize,\n    scale,\n    setScale,\n    opacity,\n    setOpacity,\n    pressedKeys,\n    setPressedKeys,\n    transform,\n    settings,\n    svg,\n    reset,\n    download,\n  };\n\n  return <PsContext.Provider value={context}>{children}</PsContext.Provider>;\n}\n","import React from \"react\";\nimport { ToolbarWrapper, ToolButton } from \"./styles\";\nimport {\n  BRUSH_ICON,\n  COLOR_ICON,\n  MOVE_ICON,\n  ZOOM_ICON,\n} from \"../../config/images\";\nimport { PsContextType, Tool } from \"../../config/types\";\nimport { PsContext } from \"../ps/context\";\nimport { DEFAULTS } from \"../../config/consts\";\n\n// const HIDDEN_STYLE = {\n//   opacity: 0,\n//\n// };\n\nexport default function Toolbar() {\n  const { tool, setTool, color, setColor } = React.useContext(\n    PsContext\n  ) as PsContextType;\n  const colorInput = React.useRef<HTMLInputElement | null>(null);\n\n  const toggleTool = React.useCallback(\n    (tool: Tool) => {\n      return () => {\n        setTool((currentTool) => {\n          if (currentTool === tool) return DEFAULTS.tool;\n          return tool;\n        });\n      };\n    },\n    [setTool]\n  );\n\n  return (\n    <ToolbarWrapper>\n      <ToolButton\n        onClick={toggleTool(Tool.move)}\n        active={tool === Tool.move}\n        title=\"Move (v)\"\n      >\n        <img src={MOVE_ICON} alt=\"\" />\n      </ToolButton>\n      <ToolButton\n        onClick={toggleTool(Tool.zoom)}\n        active={tool === Tool.zoom}\n        title=\"Zoom (z)\"\n      >\n        <img src={ZOOM_ICON} alt=\"\" />\n      </ToolButton>\n      <ToolButton\n        onClick={toggleTool(Tool.brush)}\n        active={tool === Tool.brush}\n        title=\"Brush (b)\"\n      >\n        <img src={BRUSH_ICON} alt=\"\" />\n      </ToolButton>\n      <ToolButton inactive title=\"Color\">\n        <img src={COLOR_ICON(color)} alt=\"\" />\n        <input\n          ref={colorInput}\n          type=\"color\"\n          onChange={(e) => setColor(e.target.value)}\n        />\n      </ToolButton>\n    </ToolbarWrapper>\n  );\n}\n","import styled from \"styled-components\";\nimport { MAX_CANVAS_WIDTH, MOBILE_WIDTH } from \"../../config/consts\";\nimport { TRANSPARENT_BACKGROUND } from \"../../config/images\";\n\nexport const CanvasWrapper = styled.div`\n  flex: 1 0;\n  width: 100%;\n  max-width: ${MAX_CANVAS_WIDTH}px;\n\n  @media (max-width: ${MOBILE_WIDTH}px) {\n    flex: 0 1;\n  }\n\n  svg {\n    display: block;\n    background-repeat: repeat;\n    background-image: url(${TRANSPARENT_BACKGROUND});\n\n    image {\n      pointer-events: none;\n    }\n  }\n`;\n","import React from \"react\";\nimport { CanvasWrapper } from \"./styles\";\nimport { PsContextType, Tool } from \"../../config/types\";\nimport { PsContext } from \"../ps/context\";\nimport { getCursor } from \"../../utils\";\n\nexport default function Canvas() {\n  const {\n    size,\n    filters,\n    blob,\n    transform,\n    opacity,\n    pointGroups,\n    settings,\n    tool,\n    pointer,\n    brushSize,\n    color,\n    svg,\n    pressedKeys,\n  } = React.useContext(PsContext) as PsContextType;\n\n  return (\n    <CanvasWrapper style={{ cursor: getCursor(tool, pressedKeys) }}>\n      <svg\n        ref={svg}\n        viewBox={`0 0 ${size.width} ${size.height}`}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        style={{\n          maxWidth: `${size.width}px`,\n          maxHeight: `${size.height}px`,\n        }}\n      >\n        <filter id=\"filters\">\n          {/* blur */}\n          <feGaussianBlur stdDeviation={filters.blur} />\n          {/* hue */}\n          <feColorMatrix type=\"hueRotate\" values={filters.hue.toString()} />\n          {/* saturation */}\n          <feColorMatrix\n            type=\"saturate\"\n            values={filters.saturation.toString()}\n          />\n          {/* sepia */}\n          {filters.sepia && (\n            <feColorMatrix\n              type=\"matrix\"\n              values=\"0.39 0.769 0.189 0 0 0.349 0.686 0.168 0 0 0.272 0.534 0.131 0 0 0 0 0 1 0\"\n            />\n          )}\n        </filter>\n\n        <image\n          xlinkHref={blob}\n          filter=\"url(#filters)\"\n          transform={transform}\n          opacity={opacity}\n        />\n\n        {pointGroups.map((pointGroup, index) => {\n          return (\n            <path\n              key={index}\n              stroke={pointGroup.color}\n              fill=\"none\"\n              d={`M${pointGroup.points\n                .map((p) => [p.x * size.width, p.y * size.height].join(\",\"))\n                .join(\",\")}`}\n              strokeWidth={pointGroup.size}\n              strokeLinecap={settings.lineCap}\n              strokeLinejoin=\"round\"\n            />\n          );\n        })}\n        {tool === Tool.brush && (\n          <circle\n            cx={(pointer.x * size.width).toString()}\n            cy={(pointer.y * size.height).toString()}\n            r={brushSize / 2}\n            fill={color}\n            strokeMiterlimit=\"10\"\n          />\n        )}\n      </svg>\n    </CanvasWrapper>\n  );\n}\n","import styled from \"styled-components\";\nimport vars from \"../../config/vars\";\nimport { MAX_SIDEBAR_WIDTH, MOBILE_WIDTH } from \"../../config/consts\";\n\nexport const SidebarWrapper = styled.div`\n  align-self: flex-start;\n  padding: 1em;\n  width: 100%;\n  max-width: ${MAX_SIDEBAR_WIDTH}px;\n  background-color: ${vars.colors.black300};\n\n  @media (max-width: ${MOBILE_WIDTH}px) {\n    display: flex;\n    flex-wrap: wrap;\n    max-width: 100%;\n  }\n`;\n","import React from \"react\";\nimport { SidebarWrapper } from \"./styles\";\nimport { PsContextType } from \"../../config/types\";\nimport { PsContext } from \"../ps/context\";\n\nexport default function Sidebar() {\n  const {\n    filters,\n    setFilters,\n    brushSize,\n    setBrushSize,\n    rotation,\n    setRotation,\n    opacity,\n    setOpacity,\n    download,\n    reset,\n  } = React.useContext(PsContext) as PsContextType;\n\n  return (\n    <SidebarWrapper>\n      <div>\n        <label>\n          sepia:\n          <input\n            type=\"checkbox\"\n            checked={filters.sepia}\n            onChange={(e) =>\n              setFilters((filters) => ({\n                ...filters,\n                sepia: e.target.checked,\n              }))\n            }\n          />\n        </label>\n      </div>\n      <div>\n        <label>saturation({filters.saturation}):</label>\n        <br />\n        <input\n          type=\"range\"\n          min={0}\n          max={3}\n          step={0.01}\n          value={filters.saturation}\n          onChange={(e) =>\n            setFilters((filters) => ({\n              ...filters,\n              saturation: parseFloat(e.target.value),\n            }))\n          }\n        />\n      </div>\n      <div>\n        <label>brushSize({brushSize}px):</label>\n        <br />\n        <input\n          type=\"range\"\n          min={0}\n          max={100}\n          step={1}\n          value={brushSize}\n          onChange={(e) => setBrushSize(parseInt(e.target.value, 10))}\n        />\n      </div>\n      <div>\n        <label>rotation({rotation}&deg;):</label>\n        <br />\n        <input\n          type=\"range\"\n          min={0}\n          max={360}\n          step={1}\n          value={rotation}\n          onChange={(e) => setRotation(parseInt(e.target.value, 10))}\n        />\n      </div>\n      <div>\n        <label>blur({filters.blur}px):</label>\n        <br />\n        <input\n          type=\"range\"\n          min={0}\n          max={100}\n          step={1}\n          value={filters.blur}\n          onChange={(e) =>\n            setFilters((filters) => ({\n              ...filters,\n              blur: parseInt(e.target.value, 10),\n            }))\n          }\n        />\n      </div>\n      <div>\n        <label>hue({filters.hue}&deg;):</label>\n        <br />\n        <input\n          type=\"range\"\n          min={0}\n          max={360}\n          step={1}\n          value={filters.hue}\n          onChange={(e) =>\n            setFilters((filters) => ({\n              ...filters,\n              hue: parseInt(e.target.value, 10),\n            }))\n          }\n        />\n      </div>\n      <div>\n        <label>opacity({opacity}):</label>\n        <br />\n        <input\n          type=\"range\"\n          min={0}\n          max={1}\n          step={0.01}\n          value={opacity}\n          onChange={(e) => setOpacity(parseFloat(e.target.value))}\n        />\n      </div>\n      <div>\n        <button onClick={download}>download</button>\n      </div>\n      <div>\n        <button onClick={reset}>reset</button>\n      </div>\n    </SidebarWrapper>\n  );\n}\n","import React from \"react\";\nimport { PsFlex, PsInner, PsWrapper } from \"./styles\";\nimport { Props } from \"../../config/types\";\nimport Toolbar from \"../toolbar/toolbar\";\nimport Canvas from \"../canvas/canvas\";\nimport Sidebar from \"../sidebar/sidebar\";\nimport PsContextProvider from \"./context\";\n\nexport default function Ps({ src }: Props) {\n  return (\n    <PsContextProvider src={src}>\n      <PsWrapper>\n        <PsInner>\n          <Toolbar />\n          <PsFlex>\n            <Canvas />\n            <Sidebar />\n          </PsFlex>\n        </PsInner>\n      </PsWrapper>\n    </PsContextProvider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport testLandscape from \"./assets/test-landscape.png\";\nimport Ps from \"./components/ps/ps\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Ps src={testLandscape} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}